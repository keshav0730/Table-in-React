{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Keshav_WorkPlace\\\\Form\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Keshav_WorkPlace\\\\Form\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Keshav_WorkPlace\\\\Form\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"C:\\\\Keshav_WorkPlace\\\\Form\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _excluded = [\"indeterminate\"];\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Keshav_WorkPlace\\\\Form\\\\src\\\\App.js\";\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport makeData from \"./makeData\";\nvar Styles = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  table {\\n    border-spacing: 0;\\n    border: 1px solid black;\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem;\\n      border-bottom: 1px solid black;\\n      border-right: 1px solid black;\\n      :last-child {\\n        border-right: 0;\\n      }\\n    }\\n  }\\n\"])));\nvar IndeterminateCheckbox = React.forwardRef(function (_ref, ref) {\n  var indeterminate = _ref.indeterminate,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n  React.useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"radio\",\n    ref: resolvedRef\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n});\n\nfunction Table(_ref2) {\n  var _this2 = this;\n\n  var columns = _ref2.columns,\n      data = _ref2.data;\n\n  // Use the state and functions returned from useTable to build your UI\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedRowId = _useState2[0],\n      setSelectedRowId = _useState2[1];\n\n  var selectedRowIds = [];\n\n  if (selectedRowId) {\n    selectedRowIds.push(selectedRowId);\n  }\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    autoResetSelectedRows: false,\n    initialState: {\n      selectedRowIds: selectedRowIds\n    }\n  }, useRowSelect, function (hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return [// Let's make a column for selection\n      {\n        id: \"selection\",\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: function Header(_ref3) {\n          var getToggleAllRowsSelectedProps = _ref3.getToggleAllRowsSelectedProps;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(IndeterminateCheckbox, Object.assign({\n            onClick: function onClick() {}\n          }, getToggleAllRowsSelectedProps(), {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }\n          })));\n        },\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(IndeterminateCheckbox, Object.assign({\n            onClick: function onClick() {\n              return setSelectedRowId(row.id);\n            }\n          }, row.getToggleRowSelectedProps(), {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }\n          })));\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow,\n      selectedFlatRows = _useTable.selectedFlatRows,\n      selectedRowPaths = _useTable.state.selectedRowPaths;\n\n  console.log(\"Some issue - selectedFlatRows prints twice..\", selectedFlatRows); // Render the UI for your table\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), column.render(\"Header\"));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), rows.slice(0, 10).map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"Selected Rows: \", Object.keys(selectedRowIds).length), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, JSON.stringify({\n    selectedRowIds: selectedRowIds[0]\n  }, null, 2))));\n}\n\nvar App = function App() {\n  var columns = React.useMemo(function () {\n    return [{\n      Header: \"Name\",\n      columns: [{\n        Header: \"First Name\",\n        accessor: \"firstName\"\n      }, {\n        Header: \"Last Name\",\n        accessor: \"lastName\"\n      }]\n    }, {\n      Header: \"Info\",\n      columns: [{\n        Header: \"Age\",\n        accessor: \"age\"\n      }, {\n        Header: \"Visits\",\n        accessor: \"visits\"\n      }, {\n        Header: \"Status\",\n        accessor: \"status\"\n      }, {\n        Header: \"Profile Progress\",\n        accessor: \"progress\"\n      }]\n    }];\n  }, []);\n  var data = React.useMemo(function () {\n    return makeData(10, 3);\n  }, []);\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Keshav_WorkPlace/Form/src/App.js"],"names":["React","useState","styled","useTable","useRowSelect","makeData","Styles","div","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Table","columns","data","selectedRowId","setSelectedRowId","selectedRowIds","push","autoResetSelectedRows","initialState","hooks","visibleColumns","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","selectedRowPaths","state","console","log","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","slice","i","getRowProps","cells","cell","getCellProps","Object","keys","length","JSON","stringify","App","useMemo","accessor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useRowSelect } from \"react-table\";\n\nimport makeData from \"./makeData\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        {/*<input type=\"checkbox\" ref={resolvedRef} {...rest} />*/}\n        <input type=\"radio\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const [selectedRowId, setSelectedRowId] = useState(null);\n  const selectedRowIds = [];\n  if (selectedRowId) {\n    selectedRowIds.push(selectedRowId);\n  }\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n    state: { selectedRowPaths }\n    // state: { selectedRowIds },\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetSelectedRows: false,\n      initialState: { selectedRowIds }\n    },\n    useRowSelect,\n    hooks => {\n      hooks.visibleColumns.push(columns => [\n        // Let's make a column for selection\n        {\n          id: \"selection\",\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox\n                onClick={() => {}}\n                {...getToggleAllRowsSelectedProps()}\n              />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox\n                onClick={() => setSelectedRowId(row.id)}\n                {...row.getToggleRowSelectedProps()}\n              />\n            </div>\n          )\n        },\n        ...columns\n      ]);\n    }\n  );\n\n  console.log(\"Some issue - selectedFlatRows prints twice..\", selectedFlatRows);\n\n  // Render the UI for your table\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.slice(0, 10).map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedRowIds: selectedRowIds[0]\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n    </>\n  );\n}\n\nconst App=()=> {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        columns: [\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          },\n          {\n            Header: \"Last Name\",\n            accessor: \"lastName\"\n          }\n        ]\n      },\n      {\n        Header: \"Info\",\n        columns: [\n          {\n            Header: \"Age\",\n            accessor: \"age\"\n          },\n          {\n            Header: \"Visits\",\n            accessor: \"visits\"\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\"\n          },\n          {\n            Header: \"Profile Progress\",\n            accessor: \"progress\"\n          }\n        ]\n      }\n    ],\n    []\n  );\n\n  const data = React.useMemo(() => makeData(10, 3), []);\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}